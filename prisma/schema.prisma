// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id            String       @id @default(cuid())
  name          String?
  email         String?      @unique
  emailVerified DateTime?
  image         String?
  password      String?
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  predictions   Prediction[]
  rooms         UserRoom[]
  isAdmin       Boolean      @default(false)
  seenMovies    SeenMovie[]

}

model Prediction {
  id         String   @id @default(cuid())
  userId     String
  categoryId String
  nomineeId  String
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  user       User     @relation(fields: [userId], references: [id])
  category   Category @relation(fields: [categoryId], references: [id])
  nominee    Nominee  @relation(fields: [nomineeId], references: [id])

  @@unique([userId, categoryId])
}

model Category {
  id          String       @id @default(cuid())
  name        String
  nominees    Nominee[]
  predictions Prediction[]
}

model Nominee {
  id          String       @id @default(cuid())
  name        String
  categoryId  String
  isWinner    Boolean      @default(false)
  category    Category     @relation(fields: [categoryId], references: [id])
  predictions Prediction[]
  seenMovies  SeenMovie[]

}

model Room {
  id        String     @id @default(cuid())
  name      String
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  users     UserRoom[]
}

model UserRoom {
  id        String   @id @default(cuid())
  userId    String
  roomId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  room      Room     @relation(fields: [roomId], references: [id])

  @@unique([userId, roomId])
}

model SeenMovie {
  id        String   @id @default(cuid())
  userId    String
  nomineeId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])
  nominee   Nominee  @relation(fields: [nomineeId], references: [id])

  @@unique([userId, nomineeId])
}


